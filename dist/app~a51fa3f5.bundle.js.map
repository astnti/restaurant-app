{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAgCF,QA7B8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAKOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAN5B,EAOxB,EAEME,iBAAgB,WAAG,iHACTT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD1B,EAEzB,EAEMY,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAKtBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAP5B,EAQhC,EAEMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,mSCpCF,4wNAeA,QAdwB,yBADxB,4FACwB,SADxB,QAMG,EALqB,EAWrB,OAZH,EACwB,OADxB,EACwB,4CACtB,sGACyBS,MAAMC,EAAAA,EAAAA,YAAwB,OAAvC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8Bd,GAAE,yFACPS,MAAMC,EAAAA,EAAAA,OAAoBV,IAAI,OAAvC,OAARW,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaR,YAAU,2CAC/B,+CAZH,6DAYG,EAXqB,gDCOxB,QAPqB,CACjBU,WAAY,GAAF,OAAKzB,EAAAA,EAAAA,SAAe,QAC9B0B,OAAQ,SAAChB,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,EAC9CiB,iBAAkB,GAAF,OAAK3B,EAAAA,EAAAA,SAAe,kBACpC4B,WAAY,GAAF,OAAK5B,EAAAA,EAAAA,SAAe,2CCIlC,QAVe,CACb6B,SAAU,uCACVC,eAAgB,qDAChBC,iBAAkB,QAClBC,WAAY,cACZjC,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,yECCf+B,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IACAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/data/restaurantdb-source.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestaurant() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  \r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  \r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n  \r\nexport default FavoriteRestaurantIdb;","import API_ENDPOINT from '../globals/api-endpoint';\r\n \r\nclass RestaurantDbSource {\r\n  static async restaurantList() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n \r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n \r\nexport default RestaurantDbSource;","import CONFIG from './config';\r\n \r\nconst API_ENDPOINT = {\r\n    RESTAURANT: `${CONFIG.BASE_URL}list`,\r\n    DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n    RESTAURANT_IMAGE: `${CONFIG.BASE_URL}images/medium/`,\r\n    ADD_REVIEW: `${CONFIG.BASE_URL}review`,\r\n};\r\n \r\nexport default API_ENDPOINT;","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: 'palomino-v1',\r\n  DATABASE_NAME: 'palomino-restaurant',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n  };\r\n   \r\nexport default CONFIG;","import 'regenerator-runtime';\nimport '../styles/style.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n \nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#maincontent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","fetch","API_ENDPOINT","response","json","responseJson","restaurants","RESTAURANT","DETAIL","RESTAURANT_IMAGE","ADD_REVIEW","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}